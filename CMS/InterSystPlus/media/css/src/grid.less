//
// Grid system
// --------------------------------------------------


// Container widths
//
// Set the container width, and override it for fixed navbars in media queries.

.container {
  padding-top: @section-margin;
  padding-bottom: @base-unit * 3;
  .clearfix();
  .container-fixed();

  @media (min-width: @screen-sm-min) {
    width: @container-sm;
  }
  @media (min-width: @screen-md-min) {
    width: @container-md;
  }
  @media (min-width: @screen-lg-min) {
    width: @container-lg;
  }
}


// Fluid container
//
// Utilizes the mixin meant for fixed width containers, but without any defined
// width for fluid, full width layouts.

.container-fluid {
  .container-fixed();
}


// 100% container
.container--full {
  margin: 0 auto;
  width: 100%;
}

// Row
//
// Rows contain and clear the floats of your columns.

.row {
  .make-row();
}

// Extra extra small grid
//
// Columns, offsets, pushes, and pulls for extra small devices like
// smartphones.

.make-grid(xxs);
.make-grid-columns(xxs);

// Smash content into halves
.one-half {
  width: 49%;
  display: inline-block;
}

// Quorter width
.one-quarter {
  width: 32%;
  display: inline-block;
}

// Extra small grid
//
// Columns, offsets, pushes, and pulls for extra small devices like
// smartphones.

@media (min-width: @screen-xs-min) {
  .make-grid(xs);
  .make-grid-columns(xs);
}

// Small grid
//
// Columns, offsets, pushes, and pulls for the small device range, from phones
// to tablets.

@media (min-width: @screen-sm-min) {
  .make-grid(sm);
  .make-grid-columns(sm);
}


// Medium grid
//
// Columns, offsets, pushes, and pulls for the desktop device range.

@media (min-width: @screen-md-min) {
  .make-grid(md);
  .make-grid-columns(md);
}


// Large grid
//
// Columns, offsets, pushes, and pulls for the large desktop device range.

@media (min-width: @screen-lg-min) {
  .make-grid(lg);
  .make-grid-columns(lg);
}

@media (max-width: @screen-md-min) {
  .one-half {
    width: 100%;
  }
}